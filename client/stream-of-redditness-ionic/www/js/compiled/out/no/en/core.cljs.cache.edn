;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{replace read-string}, :name no.en.core, :imports nil, :requires {base64 goog.crypt.base64, goog.crypt.base64 goog.crypt.base64, cljs.reader cljs.reader, clojure.string clojure.string}, :uses {join clojure.string, replace clojure.string, upper-case clojure.string, read-string cljs.reader, split clojure.string, blank? clojure.string}, :defs {byte-scale {:meta {:end-column 16, :end-line 85, :column 6, :line 85, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :line 85, :column 1, :end-line 85, :end-column 16, :test true, :name no.en.core/byte-scale}, url-decode {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists [[s & [encoding]]], :arglists-meta (nil)}, :arglists (quote ([s & [encoding]])), :doc "Returns `s` as an URL decoded string.", :end-column 17, :end-line 74, :column 7, :line 74, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/url-decode, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists [[s & [encoding]]], :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists [[s & [encoding]]], :doc "Returns `s` as an URL decoded string.", :test true}, parse-query-params {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse the query parameter string `s` and return a map.", :end-column 25, :end-line 187, :column 7, :line 187, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-query-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse the query parameter string `s` and return a map.", :test true}, separator {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Returns the first string that separates the components in `s`.", :end-column 16, :end-line 181, :column 7, :line 181, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/separator, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Returns the first string that separates the components in `s`.", :test true}, format-url {:protocol-inline nil, :meta {:arglists (quote ([m])), :doc "Format the Ring map as an url.", :end-column 17, :end-line 152, :column 7, :line 152, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/format-url, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Format the Ring map as an url.", :test true}, split-by-regex {:protocol-inline nil, :meta {:arglists (quote ([s pattern])), :doc "Split the string `s` by the regex `pattern`.", :end-column 21, :end-line 19, :column 7, :line 19, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/split-by-regex, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 21, :method-params ([s pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s pattern])), :doc "Split the string `s` by the regex `pattern`.", :test true}, compact-map {:protocol-inline nil, :meta {:arglists (quote ([m])), :doc "Removes all map entries where the value of the entry is empty.", :end-column 18, :end-line 50, :column 7, :line 50, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/compact-map, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 18, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Removes all map entries where the value of the entry is empty.", :test true}, apply-unit {:protocol-inline nil, :meta {:arglists (quote ([number unit])), :private true, :end-column 18, :end-line 96, :column 8, :line 96, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :private true, :name no.en.core/apply-unit, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 18, :method-params ([number unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([number unit])), :test true}, split-by-comma {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Split the string `s` by comma.", :end-column 21, :end-line 26, :column 7, :line 26, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/split-by-comma, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Split the string `s` by comma.", :test true}, url-regex {:meta {:end-column 15, :end-line 17, :column 6, :line 17, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :line 17, :column 1, :end-line 17, :end-column 15, :test true, :name no.en.core/url-regex}, utf8-string {:protocol-inline nil, :meta {:arglists (quote ([bytes])), :doc "Returns `bytes` as an UTF-8 encoded string.", :end-column 18, :end-line 30, :column 7, :line 30, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/utf8-string, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 18, :method-params ([bytes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bytes])), :doc "Returns `bytes` as an UTF-8 encoded string.", :test true}, parse-integer {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as a integer number.", :end-column 20, :end-line 124, :column 7, :line 124, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-integer, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as a integer number.", :test true}, port-number {:meta {:end-column 17, :end-line 10, :column 6, :line 10, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :line 10, :column 1, :end-line 10, :end-column 17, :test true, :name no.en.core/port-number}, parse-float {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as a float number.", :end-column 18, :end-line 136, :column 7, :line 136, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-float, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as a float number.", :test true}, format-query-params {:protocol-inline nil, :meta {:arglists (quote ([m])), :doc "Format the map `m` into a query parameter string.", :end-column 26, :end-line 140, :column 7, :line 140, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/format-query-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Format the map `m` into a query parameter string.", :test true}, pow {:protocol-inline nil, :meta {:arglists (quote ([n x])), :end-column 10, :end-line 81, :column 7, :line 81, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/pow, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 10, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x])), :test true}, parse-double {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as a double number.", :end-column 19, :end-line 132, :column 7, :line 132, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-double, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as a double number.", :test true}, url-encode {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists [[s & [encoding]]], :arglists-meta (nil)}, :arglists (quote ([s & [encoding]])), :doc "Returns `s` as an URL encoded string.", :end-column 17, :end-line 63, :column 7, :line 63, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/url-encode, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists [[s & [encoding]]], :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists [[s & [encoding]]], :doc "Returns `s` as an URL encoded string.", :test true}, parse-url {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse the url `s` and return a Ring compatible map.", :end-column 16, :end-line 197, :column 7, :line 197, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-url, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse the url `s` and return a Ring compatible map.", :test true}, parse-percent {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as a percentage.", :end-column 20, :end-line 173, :column 7, :line 173, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-percent, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as a percentage.", :test true}, parse-bytes {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 18, :end-line 117, :column 7, :line 117, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-bytes, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, base64-decode {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Returns `s` as a Base64 decoded string.", :end-column 20, :end-line 43, :column 7, :line 43, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/base64-decode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Returns `s` as a Base64 decoded string.", :test true}, with-retries* {:protocol-inline nil, :meta {:arglists (quote ([n thunk])), :doc "Executes thunk. If an exception is thrown, will retry. At most n retries\n  are done. If still some exception is thrown it is bubbled upwards in\n  the call chain.", :end-column 20, :end-line 213, :column 7, :line 213, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/with-retries*, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([n thunk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n thunk])), :doc "Executes thunk. If an exception is thrown, will retry. At most n retries\n  are done. If still some exception is thrown it is bubbled upwards in\n  the call chain.", :test true}, base64-encode {:protocol-inline nil, :meta {:arglists (quote ([bytes])), :doc "Returns `s` as a Base64 encoded string.", :end-column 20, :end-line 36, :column 7, :line 36, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/base64-encode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([bytes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bytes])), :doc "Returns `s` as a Base64 encoded string.", :test true}, parse-long {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as a long number.", :end-column 17, :end-line 128, :column 7, :line 128, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/parse-long, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as a long number.", :test true}, parse-number {:protocol-inline nil, :meta {:arglists (quote ([s parse-fn])), :private true, :end-column 20, :end-line 104, :column 8, :line 104, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :private true, :name no.en.core/parse-number, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([s parse-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s parse-fn])), :test true}, pattern-quote {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Quote the special characters in `s` that are used in regular expressions.", :end-column 20, :end-line 177, :column 7, :line 177, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs"}, :name no.en.core/pattern-quote, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/no/en/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Quote the special characters in `s` that are used in regular expressions.", :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:http :https :mysql :postgresql :rabbitmq :query-params :scheme :password :user :server-name :server-port :uri :fragment :query-string :else], :seen #{:postgresql :else :password :fragment :server-port :query-params :http :uri :server-name :query-string :rabbitmq :user :scheme :mysql :https}}, :doc nil}