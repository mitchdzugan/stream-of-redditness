;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name hickory.utils, :imports nil, :requires {gstring goog.string, goog.string goog.string, clojure.string clojure.string, string clojure.string}, :uses nil, :defs {render-doctype {:protocol-inline nil, :meta {:arglists (quote ([name publicid systemid])), :doc "Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings.", :end-column 21, :end-line 39, :column 7, :line 39, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :name hickory.utils/render-doctype, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :end-column 21, :method-params ([name publicid systemid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name publicid systemid])), :doc "Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings.", :test true}, lower-case-keyword {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Converts its string argument into a lowercase keyword.", :end-column 25, :end-line 34, :column 7, :line 34, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :name hickory.utils/lower-case-keyword, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts its string argument into a lowercase keyword.", :test true}, starts-with {:protocol-inline nil, :meta {:arglists (quote ([s prefix])), :end-column 18, :end-line 29, :column 7, :line 29, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :name hickory.utils/starts-with, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :end-column 18, :method-params ([s prefix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s prefix])), :test true}, html-escape {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 18, :end-line 24, :column 7, :line 24, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :name hickory.utils/html-escape, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, unescapable-content {:doc "Elements whose content should never have html-escape codes.", :meta {:end-column 25, :end-line 16, :column 6, :line 16, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :line 16, :column 1, :end-line 16, :end-column 25, :test true, :name hickory.utils/unescapable-content}, void-element {:doc "Elements that don't have a meaningful <tag></tag> form.", :meta {:end-column 18, :end-line 11, :column 6, :line 11, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/hickory/utils.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :test true, :name hickory.utils/void-element}}, :require-macros nil, :cljs.analyzer/constants {:order [:hr :meta :wbr :command :source :param :link :col :area :br :input :base :embed :keygen :img :track :script :style], :seen #{:hr :meta :script :wbr :command :source :param :style :link :col :area :br :input :base :embed :keygen :img :track}}, :doc "Miscellaneous utilities used internally."}