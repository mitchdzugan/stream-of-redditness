;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name cljs-http.util, :imports {Uri goog.Uri}, :requires {no.en.core no.en.core, agent goog.userAgent, goog.userAgent goog.userAgent, t cognitect.transit, cognitect.transit cognitect.transit, clojure.string clojure.string, Uri goog.Uri}, :uses {capitalize clojure.string, join clojure.string, lower-case clojure.string, split clojure.string, base64-encode no.en.core, blank? clojure.string}, :defs {basic-auth {:protocol-inline nil, :meta {:arglists (quote ([credentials])), :doc "Returns the value of the HTTP basic authentication header for\n  `credentials`.", :end-column 17, :end-line 8, :column 7, :line 8, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/basic-auth, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 17, :method-params ([credentials]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([credentials])), :doc "Returns the value of the HTTP basic authentication header for\n  `credentials`.", :test true}, transit-decode {:protocol-inline nil, :meta {:arglists (quote ([s type opts])), :doc "Transit decode an object from `s`.", :end-column 21, :end-line 48, :column 7, :line 48, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/transit-decode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 21, :method-params ([s type opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s type opts])), :doc "Transit decode an object from `s`.", :test true}, user-agent {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns the user agent.", :end-column 17, :end-line 40, :column 7, :line 40, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/user-agent, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns the user agent.", :test true}, json-encode {:protocol-inline nil, :meta {:arglists (quote ([x])), :doc "JSON encode `x` into a String.", :end-column 18, :end-line 66, :column 7, :line 66, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/json-encode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "JSON encode `x` into a String.", :test true}, camelize {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Returns dash separated string `s` in camel case.", :end-column 15, :end-line 29, :column 7, :line 29, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/camelize, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Returns dash separated string `s` in camel case.", :test true}, parse-headers {:protocol-inline nil, :meta {:arglists (quote ([headers])), :end-column 20, :end-line 70, :column 7, :line 70, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/parse-headers, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 20, :method-params ([headers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([headers])), :test true}, transit-encode {:protocol-inline nil, :meta {:arglists (quote ([x type opts])), :doc "Transit encode `x` into a String.", :end-column 21, :end-line 54, :column 7, :line 54, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/transit-encode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 21, :method-params ([x type opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x type opts])), :doc "Transit encode `x` into a String.", :test true}, android? {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns true if the user agent is an Android client.", :end-column 15, :end-line 44, :column 7, :line 44, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/android?, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns true if the user agent is an Android client.", :test true}, build-url {:protocol-inline nil, :meta {:arglists (quote ([{:keys [scheme server-name server-port uri query-string]}])), :doc "Build the url from the request map.", :end-column 16, :end-line 19, :column 7, :line 19, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/build-url, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 16, :method-params ([p__21379]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [scheme server-name server-port uri query-string]}])), :doc "Build the url from the request map.", :test true}, json-decode {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "JSON decode an object from `s`.", :end-column 18, :end-line 60, :column 7, :line 60, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/json-decode, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "JSON decode an object from `s`.", :test true}, build-headers {:protocol-inline nil, :meta {:arglists (quote ([m])), :doc "Build the headers from the map.", :end-column 20, :end-line 36, :column 7, :line 36, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs"}, :name cljs-http.util/build-headers, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/util.cljs", :end-column 20, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Build the headers from the map.", :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:username :password :query-string :uri :server-port :server-name :scheme :http :keywordize-keys], :seen #{:password :username :server-port :http :uri :server-name :query-string :keywordize-keys :scheme}}, :doc nil}