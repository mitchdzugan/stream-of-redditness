;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros}, :excludes #{get}, :name cljs-http.client, :imports nil, :requires {uri goog.Uri, cljs-http.core cljs-http.core, async cljs.core.async, no.en.core no.en.core, goog.Uri goog.Uri, cljs-http.util cljs-http.util, cljs.core.async cljs.core.async, util cljs-http.util, clojure.string clojure.string, cljs.reader cljs.reader, core cljs-http.core}, :uses {url-decode no.en.core, <! cljs.core.async, join clojure.string, close! cljs.core.async, chan cljs.core.async, url-encode no.en.core, read-string cljs.reader, split clojure.string, put! cljs.core.async, blank? clojure.string}, :defs {options {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 14, :end-line 319, :column 7, :line 319, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/options, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, encode-val {:protocol-inline nil, :meta {:arglists (quote ([k v])), :private true, :end-column 18, :end-line 44, :column 8, :line 44, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :private true, :name cljs-http.client/encode-val, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 18, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v])), :test true}, put {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 10, :end-line 334, :column 7, :line 334, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/put, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, parse-query-params {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Parse `s` as query params and return a hash map.", :end-column 25, :end-line 15, :column 7, :line 15, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/parse-query-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Parse `s` as query params and return a hash map.", :test true}, wrap-accept {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [accept])], :arglists [[client & [accept]]], :arglists-meta (nil)}, :arglists (quote ([client & [accept]])), :end-column 18, :end-line 112, :column 7, :line 112, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-accept, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [accept])], :arglists [[client & [accept]]], :arglists-meta (nil)}, :method-params [(client [accept])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists [[client & [accept]]], :test true}, wrap-content-type {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [content-type])], :arglists [[client & [content-type]]], :arglists-meta (nil)}, :arglists (quote ([client & [content-type]])), :end-column 24, :end-line 119, :column 7, :line 119, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-content-type, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [content-type])], :arglists [[client & [content-type]]], :arglists-meta (nil)}, :method-params [(client [content-type])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists [[client & [content-type]]], :test true}, wrap-edn-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Encode :edn-params in the `request` :body and set the appropriate\n  Content Type header.", :end-column 22, :end-line 86, :column 7, :line 86, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-edn-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 22, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Encode :edn-params in the `request` :body and set the appropriate\n  Content Type header.", :test true}, wrap-form-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :end-column 23, :end-line 189, :column 7, :line 189, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-form-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 23, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :test true}, wrap-basic-auth {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [credentials])], :arglists [[client & [credentials]]], :arglists-meta (nil)}, :arglists (quote ([client & [credentials]])), :doc "Middleware converting the :basic-auth option or `credentials` into\n  an Authorization header.", :end-column 22, :end-line 230, :column 7, :line 230, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-basic-auth, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [credentials])], :arglists [[client & [credentials]]], :arglists-meta (nil)}, :method-params [(client [credentials])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists [[client & [credentials]]], :doc "Middleware converting the :basic-auth option or `credentials` into\n  an Authorization header.", :test true}, wrap-request {:protocol-inline nil, :meta {:arglists (quote ([request])), :doc "Returns a batteries-included HTTP request function coresponding to the given\n   core client. See client/request", :end-column 19, :end-line 260, :column 7, :line 260, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-request, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 19, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request])), :doc "Returns a batteries-included HTTP request function coresponding to the given\n   core client. See client/request", :test true}, encode-param {:protocol-inline nil, :meta {:arglists (quote ([[k v]])), :private true, :end-column 20, :end-line 53, :column 8, :line 53, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :private true, :name cljs-http.client/encode-param, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 20, :method-params ([p__21256]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k v]])), :test true}, request {:meta {:doc "Executes the HTTP request corresponding to the given map and returns the\n   response map for corresponding to the resulting HTTP response.\n\n   In addition to the standard Ring request keys, the following keys are also\n   recognized:\n   * :url\n   * :method\n   * :query-params", :end-column 10, :end-line 292, :column 3, :line 292, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :line 283, :column 1, :end-line 292, :end-column 10, :doc "Executes the HTTP request corresponding to the given map and returns the\n   response map for corresponding to the resulting HTTP response.\n\n   In addition to the standard Ring request keys, the following keys are also\n   recognized:\n   * :url\n   * :method\n   * :query-params", :test true, :name cljs-http.client/request}, get {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 10, :end-line 299, :column 7, :line 299, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/get, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, jsonp {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 12, :end-line 309, :column 7, :line 309, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/jsonp, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, patch {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 12, :end-line 324, :column 7, :line 324, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/patch, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, decode-body {:protocol-inline nil, :meta {:arglists (quote ([response decode-fn content-type request-method])), :doc "Decocde the :body of `response` with `decode-fn` if the content type matches.", :end-column 18, :end-line 76, :column 7, :line 76, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/decode-body, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 18, :method-params ([response decode-fn content-type request-method]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 4, :fn-var true, :arglists (quote ([response decode-fn content-type request-method])), :doc "Decocde the :body of `response` with `decode-fn` if the content type matches.", :test true}, wrap-json-response {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Decode application/json responses.", :end-column 25, :end-line 174, :column 7, :line 174, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-json-response, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 25, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Decode application/json responses.", :test true}, wrap-transit-response {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Decode application/transit+json responses.", :end-column 28, :end-line 151, :column 7, :line 151, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-transit-response, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 28, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Decode application/transit+json responses.", :test true}, wrap-edn-response {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Decode application/edn responses.", :end-column 24, :end-line 98, :column 7, :line 98, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-edn-response, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 24, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Decode application/edn responses.", :test true}, generate-form-data {:protocol-inline nil, :meta {:arglists (quote ([params])), :end-column 25, :end-line 198, :column 7, :line 198, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/generate-form-data, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 25, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params])), :test true}, move {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 11, :end-line 314, :column 7, :line 314, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/move, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, wrap-default-headers {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [default-headers])], :arglists [[client & [default-headers]]], :arglists-meta (nil)}, :arglists (quote ([client & [default-headers]])), :end-column 27, :end-line 105, :column 7, :line 105, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-default-headers, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(client [default-headers])], :arglists [[client & [default-headers]]], :arglists-meta (nil)}, :method-params [(client [default-headers])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists [[client & [default-headers]]], :test true}, delete {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 13, :end-line 294, :column 7, :line 294, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/delete, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, wrap-json-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Encode :json-params in the `request` :body and set the appropriate\n  Content Type header.", :end-column 23, :end-line 162, :column 7, :line 162, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-json-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 23, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Encode :json-params in the `request` :body and set the appropriate\n  Content Type header.", :test true}, wrap-channel-from-request-map {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Pipe the response-channel into the request-map's\n   custom channel (e.g. to enable transducers)", :end-column 36, :end-line 251, :column 7, :line 251, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-channel-from-request-map, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 36, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Pipe the response-channel into the request-map's\n   custom channel (e.g. to enable transducers)", :test true}, parse-url {:protocol-inline nil, :meta {:arglists (quote ([url])), :doc "Parse `url` into a hash map.", :end-column 16, :end-line 26, :column 7, :line 26, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/parse-url, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 16, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "Parse `url` into a hash map.", :test true}, wrap-url {:protocol-inline nil, :meta {:arglists (quote ([client])), :end-column 15, :end-line 222, :column 7, :line 222, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-url, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 15, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :test true}, if-pos {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 13, :end-line 12, :column 7, :line 12, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/if-pos, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, default-transit-opts {:meta {:private true, :end-column 43, :end-line 126, :column 23, :line 126, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :line 126, :column 1, :end-line 126, :end-column 43, :private true, :test true, :name cljs-http.client/default-transit-opts}, head {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 11, :end-line 304, :column 7, :line 304, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/head, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, regex-char-esc-smap {:meta {:end-column 25, :end-line 64, :column 6, :line 64, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :line 64, :column 1, :end-line 64, :end-column 25, :test true, :name cljs-http.client/regex-char-esc-smap}, wrap-server-name {:protocol-inline nil, :meta {:arglists (quote ([client server-name])), :end-column 23, :end-line 219, :column 7, :line 219, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-server-name, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 23, :method-params ([client server-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 2, :fn-var true, :arglists (quote ([client server-name])), :test true}, wrap-method {:protocol-inline nil, :meta {:arglists (quote ([client])), :end-column 18, :end-line 212, :column 7, :line 212, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-method, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 18, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :test true}, wrap-multipart-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :end-column 28, :end-line 204, :column 7, :line 204, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-multipart-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 28, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :test true}, escape-special {:protocol-inline nil, :meta {:arglists (quote ([string])), :doc "Escape special characters -- for content-type.", :end-column 21, :end-line 69, :column 7, :line 69, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/escape-special, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 21, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string])), :doc "Escape special characters -- for content-type.", :test true}, generate-query-string {:protocol-inline nil, :meta {:arglists (quote ([params])), :end-column 28, :end-line 58, :column 7, :line 58, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/generate-query-string, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 28, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params])), :test true}, encode-vals {:protocol-inline nil, :meta {:arglists (quote ([k vs])), :private true, :end-column 19, :end-line 47, :column 8, :line 47, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :private true, :name cljs-http.client/encode-vals, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 19, :method-params ([k vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k vs])), :test true}, post {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :arglists (quote ([url & [req]])), :doc "Like #'request, but sets the :method and :url as appropriate.", :end-column 11, :end-line 329, :column 7, :line 329, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/post, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [req])], :arglists [[url & [req]]], :arglists-meta (nil)}, :method-params [(url [req])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 1, :fn-var true, :arglists [[url & [req]]], :doc "Like #'request, but sets the :method and :url as appropriate.", :test true}, wrap-transit-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Encode :transit-params in the `request` :body and set the appropriate\n  Content Type header.\n\n  A :transit-opts map can be optionally provided with the following keys:\n\n  :encoding                #{:json, :json-verbose}\n  :decoding                #{:json, :json-verbose}\n  :encoding/decoding-opts  appropriate map of options to be passed to\n                           transit writer/reader, respectively.", :end-column 26, :end-line 130, :column 7, :line 130, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-transit-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 26, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Encode :transit-params in the `request` :body and set the appropriate\n  Content Type header.\n\n  A :transit-opts map can be optionally provided with the following keys:\n\n  :encoding                #{:json, :json-verbose}\n  :decoding                #{:json, :json-verbose}\n  :encoding/decoding-opts  appropriate map of options to be passed to\n                           transit writer/reader, respectively.", :test true}, unexceptional-status? {:meta {:end-column 27, :end-line 41, :column 6, :line 41, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :line 41, :column 1, :end-line 41, :end-column 27, :test true, :name cljs-http.client/unexceptional-status?}, wrap-oauth {:protocol-inline nil, :meta {:arglists (quote ([client])), :doc "Middleware converting the :oauth-token option into an Authorization header.", :end-column 17, :end-line 241, :column 7, :line 241, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-oauth, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 17, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :doc "Middleware converting the :oauth-token option into an Authorization header.", :test true}, wrap-query-params {:protocol-inline nil, :meta {:arglists (quote ([client])), :end-column 24, :end-line 181, :column 7, :line 181, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs"}, :name cljs-http.client/wrap-query-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/cljs_http/client.cljs", :end-column 24, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:scheme :server-name :server-port :uri :query-string :query-params :head :status :headers :body :edn-params :request-method :default-headers :accept :content-type :encoding :encoding-opts :decoding :decoding-opts :json :transit-params :transit-opts :json-params :form-params :patch :delete :post :put :multipart-params :method :url :basic-auth :oauth-token :channel :get :jsonp :move :options], :seen #{:encoding :get :json-params :jsonp :patch :transit-params :method :encoding-opts :move :channel :delete :headers :server-port :head :default-headers :form-params :status :decoding-opts :url :query-params :content-type :oauth-token :post :options :uri :decoding :server-name :put :json :transit-opts :query-string :body :edn-params :basic-auth :multipart-params :scheme :request-method :accept}}, :doc nil}