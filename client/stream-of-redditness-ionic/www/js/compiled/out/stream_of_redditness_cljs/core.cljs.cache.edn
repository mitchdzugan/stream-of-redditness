;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name stream-of-redditness-cljs.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :defs {writeLocalStorage {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 24, :end-line 59, :column 7, :line 59, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeLocalStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, readLocalStorageWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 33, :end-line 57, :column 7, :line 57, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readLocalStorageWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 33, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, set-html! {:protocol-inline nil, :meta {:arglists (quote ([el content])), :end-column 16, :end-line 23, :column 7, :line 23, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/set-html!, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 16, :method-params ([el content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el content])), :test true}, onAuthNewClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 21, :end-line 102, :column 7, :line 102, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthNewClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, t24989 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24989, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 15, :line 169, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, storageString {:meta {:end-column 19, :end-line 53, :column 6, :line 53, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 53, :column 1, :end-line 53, :end-column 19, :test true, :name stream-of-redditness-cljs.core/storageString}, t24992 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24992, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 15, :line 160, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, readAppStateWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 29, :end-line 33, :column 7, :line 33, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readAppStateWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 29, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, ->t24992 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta24993])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24992, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta24993]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 15, :factory :positional, :line 160, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta24993])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, localStorage {:meta {:end-column 18, :end-line 52, :column 6, :line 52, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 52, :column 1, :end-line 52, :end-column 18, :test true, :name stream-of-redditness-cljs.core/localStorage}, writeAppStateWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 30, :end-line 38, :column 7, :line 38, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeAppStateWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, ->t24989 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta24990])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24989, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta24990]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 15, :factory :positional, :line 169, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta24990])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, deep-merge {:protocol-inline nil, :meta {:arglists (quote ([a b])), :end-column 17, :end-line 26, :column 7, :line 26, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :test true}, socket {:meta {:end-column 12, :end-line 88, :column 6, :line 88, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 88, :column 1, :end-line 88, :end-column 12, :test true, :name stream-of-redditness-cljs.core/socket}, onAuthSwitchClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 24, :end-line 127, :column 7, :line 127, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthSwitchClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, parseObjForce {:protocol-inline nil, :meta {:arglists (quote ([jsonString])), :end-column 20, :end-line 44, :column 7, :line 44, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/parseObjForce, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([jsonString]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([jsonString])), :test true}, showPopup {:protocol-inline nil, :meta {:arglists (quote ([popupDetails])), :export true, :end-column 25, :end-line 79, :column 16, :line 79, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/showPopup, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([popupDetails]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupDetails])), :test true}, authButton {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 26, :end-line 151, :column 16, :line 151, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/authButton, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t24995 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24995, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 15, :line 169, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t24986 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta24987])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24986, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta24987]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 15, :factory :positional, :line 160, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta24987])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t24995 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta24996])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24995, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta24996]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 15, :factory :positional, :line 169, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta24996])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, writeAppState {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 20, :end-line 36, :column 7, :line 36, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeAppState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, readLocalStorage {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 54, :column 7, :line 54, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readLocalStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, writeLocalStorageWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 34, :end-line 65, :column 7, :line 65, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeLocalStorageWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 34, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, app-state {:meta {:end-column 19, :end-line 9, :column 10, :line 9, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :test true, :name stream-of-redditness-cljs.core/app-state}, switchActiveUser {:protocol-inline nil, :meta {:arglists (quote ([username])), :end-column 23, :end-line 123, :column 7, :line 123, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/switchActiveUser, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 23, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username])), :test true}, registerPopupShower {:protocol-inline nil, :meta {:arglists (quote ([popupShower])), :export true, :end-column 35, :end-line 76, :column 16, :line 76, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/registerPopupShower, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 35, :method-params ([popupShower]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupShower])), :test true}, t24986 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24986, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 15, :line 160, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-js-reload {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 176, :column 7, :line 176, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/on-js-reload, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, refreshView {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 40, :column 7, :line 40, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/refreshView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :cljs.analyzer/constants {:order [:tripwire :oauthReq :popups :reddit :awaitingReqUrl :reqUrl :intervalId :requestSent :popupShower :activePopup :lastClickNotInPopup :activeThreads :else :users :active-user :template :title :buttons :text :onTap :target], :seen #{:requestSent :awaitingReqUrl :buttons :activePopup :onTap :popups :else :active-user :template :popupShower :title :lastClickNotInPopup :reqUrl :target :intervalId :tripwire :oauthReq :users :activeThreads :text :reddit}}, :doc nil}