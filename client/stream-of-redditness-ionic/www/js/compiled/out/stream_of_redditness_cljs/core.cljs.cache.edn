;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name stream-of-redditness-cljs.core, :imports nil, :requires {string clojure.string, clojure.string clojure.string, ajax.core ajax.core, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses {POST ajax.core, GET ajax.core}, :defs {->t24679 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner activeThreads threadsString streamView meta24680])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24679, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([owner activeThreads threadsString streamView meta24680]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 411, :max-fixed-arity 5, :fn-var true, :arglists (quote ([owner activeThreads threadsString streamView meta24680])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, readStorage {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 94, :column 7, :line 94, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t24641 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta24642])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24641, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta24642]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 198, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta24642])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, set-html! {:protocol-inline nil, :meta {:arglists (quote ([el content])), :end-column 16, :end-line 43, :column 7, :line 43, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/set-html!, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 16, :method-params ([el content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el content])), :test true}, zipWriteStorage {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 22, :end-line 104, :column 7, :line 104, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipWriteStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, onAuthNewClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 21, :end-line 141, :column 7, :line 141, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthNewClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, authButtonView {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 30, :end-line 188, :column 16, :line 188, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/authButtonView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, newCommentsPoller {:protocol-inline nil, :meta {:arglists (quote ([threadId])), :end-column 24, :end-line 369, :column 7, :line 369, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/newCommentsPoller, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([threadId]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threadId])), :test true}, processCommentTree {:protocol-inline nil, :meta {:arglists (quote ([pathTo commentTree])), :end-column 25, :end-line 300, :column 7, :line 300, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/processCommentTree, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([pathTo commentTree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pathTo commentTree])), :test true}, storageString {:meta {:end-column 19, :end-line 93, :column 6, :line 93, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 93, :column 1, :end-line 93, :end-column 19, :test true, :name stream-of-redditness-cljs.core/storageString}, ->t24638 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta24639])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24638, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta24639]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 193, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta24639])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, renderThreads {:protocol-inline nil, :meta {:arglists (quote ([threads])), :end-column 20, :end-line 220, :column 7, :line 220, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderThreads, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([threads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threads])), :test true}, moreCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadIds response])), :end-column 30, :end-line 249, :column 7, :line 249, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/moreCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([threadIds response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadIds response])), :test true}, t24638 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24638, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 193, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, allPoss {:meta {:end-column 13, :end-line 16, :column 6, :line 16, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :test true, :name stream-of-redditness-cljs.core/allPoss}, binary {:meta {:end-column 12, :end-line 15, :column 6, :line 15, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :test true, :name stream-of-redditness-cljs.core/binary}, deep-merge-root {:protocol-inline nil, :meta {:arglists (quote ([f a b])), :end-column 22, :end-line 46, :column 7, :line 46, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge-root, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([f a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f a b])), :test true}, pollReddit {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 351, :column 7, :line 351, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/pollReddit, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, writeStorage {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 19, :end-line 99, :column 7, :line 99, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, streamView {:protocol-inline nil, :meta {:arglists (quote ([threadsString])), :export true, :end-column 26, :end-line 378, :column 16, :line 378, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/streamView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 26, :method-params ([threadsString]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threadsString])), :test true}, t24635 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24635, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 198, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, localStorage {:meta {:end-column 18, :end-line 92, :column 6, :line 92, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 92, :column 1, :end-line 92, :end-column 18, :test true, :name stream-of-redditness-cljs.core/localStorage}, printReturn {:protocol-inline nil, :meta {:arglists (quote ([a])), :end-column 18, :end-line 11, :column 7, :line 11, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/printReturn, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :test true}, deep-merge {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b f]), :arglists ([a b] [a b f]), :arglists-meta (nil nil)}, :arglists (quote ([a b] [a b f])), :end-column 17, :end-line 56, :column 7, :line 56, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b f]), :arglists ([a b] [a b f]), :arglists-meta (nil nil)}, :method-params ([a b] [a b f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 3, :fn-var true, :arglists ([a b] [a b f]), :test true}, renderBaseComment {:protocol-inline nil, :meta {:arglists (quote ([baseComment])), :end-column 24, :end-line 203, :column 7, :line 203, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderBaseComment, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([baseComment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([baseComment])), :test true}, makeNextRequest {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 418, :column 7, :line 418, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/makeNextRequest, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 418, :end-line 418, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, socket {:meta {:end-column 12, :end-line 127, :column 6, :line 127, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 127, :column 1, :end-line 127, :end-column 12, :test true, :name stream-of-redditness-cljs.core/socket}, onAuthSwitchClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 24, :end-line 166, :column 7, :line 166, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthSwitchClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, parseObjForce {:protocol-inline nil, :meta {:arglists (quote ([jsonString])), :end-column 20, :end-line 84, :column 7, :line 84, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/parseObjForce, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([jsonString]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([jsonString])), :test true}, showPopup {:protocol-inline nil, :meta {:arglists (quote ([popupDetails])), :export true, :end-column 25, :end-line 118, :column 16, :line 118, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/showPopup, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([popupDetails]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupDetails])), :test true}, ->t24632 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta24633])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24632, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta24633]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 193, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta24633])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, partition2 {:protocol-inline nil, :meta {:arglists (quote ([f l])), :end-column 17, :end-line 24, :column 7, :line 24, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/partition2, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([f l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f l])), :test true}, ->t24635 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta24636])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24635, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta24636]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 198, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta24636])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, writeState {:protocol-inline nil, :meta {:arglists (quote ([f hashmap])), :end-column 17, :end-line 63, :column 7, :line 63, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([f hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f hashmap])), :test true}, zipReadState {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 19, :end-line 60, :column 7, :line 60, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipReadState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, t24690 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24690, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 7, :line 411, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, zipWriteState {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([zip hashmap] [zip hashmap k]), :arglists ([zip hashmap] [zip hashmap k]), :arglists-meta (nil nil)}, :arglists (quote ([zip hashmap] [zip hashmap k])), :end-column 20, :end-line 65, :column 7, :line 65, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipWriteState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([zip hashmap] [zip hashmap k]), :arglists ([zip hashmap] [zip hashmap k]), :arglists-meta (nil nil)}, :method-params ([zip hashmap] [zip hashmap k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists ([zip hashmap] [zip hashmap k]), :test true}, myFun {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 375, :column 7, :line 375, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/myFun, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t24632 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24632, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 193, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, zipOverwriteState {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 24, :end-line 70, :column 7, :line 70, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipOverwriteState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, merge-vectors {:protocol-inline nil, :meta {:arglists (quote ([k x y])), :end-column 20, :end-line 53, :column 7, :line 53, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/merge-vectors, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([k x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 3, :fn-var true, :arglists (quote ([k x y])), :test true}, zipReadStorage {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 21, :end-line 97, :column 7, :line 97, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipReadStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, app-state {:meta {:end-column 19, :end-line 28, :column 10, :line 28, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 28, :column 1, :end-line 28, :end-column 19, :test true, :name stream-of-redditness-cljs.core/app-state}, switchActiveUser {:protocol-inline nil, :meta {:arglists (quote ([username])), :end-column 23, :end-line 162, :column 7, :line 162, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/switchActiveUser, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 23, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username])), :test true}, ->t24690 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner activeThreads threadsString streamView meta24691])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t24690, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([owner activeThreads threadsString streamView meta24691]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 411, :max-fixed-arity 5, :fn-var true, :arglists (quote ([owner activeThreads threadsString streamView meta24691])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t24641 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24641, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 198, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t24679 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t24679, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 7, :line 411, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, registerPopupShower {:protocol-inline nil, :meta {:arglists (quote ([popupShower])), :export true, :end-column 35, :end-line 115, :column 16, :line 115, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/registerPopupShower, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 35, :method-params ([popupShower]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupShower])), :test true}, on-js-reload {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 439, :column 7, :line 439, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/on-js-reload, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 439, :end-line 439, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, newCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadId response])), :end-column 29, :end-line 342, :column 7, :line 342, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/newCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 29, :method-params ([threadId response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadId response])), :test true}, refreshView {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 80, :column 7, :line 80, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/refreshView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, renderBaseComment1 {:protocol-inline nil, :meta {:arglists (quote ([baseComment])), :end-column 25, :end-line 211, :column 7, :line 211, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderBaseComment1, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([baseComment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([baseComment])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:tripwire :oauthReq :popups :reddit :awaitingReqUrl :reqUrl :intervalId :requestSent :popupShower :activePopup :lastClickNotInPopup :activeThreads :requestQueue :else :users :active-user :template :title :buttons :text :onTap :target :content :time :comments :className :style :padding :backgroundColor :color :marginLeft :id :threadId :requestFun :type :handler :more :waitTime :a :new], :seen #{:requestSent :marginLeft :awaitingReqUrl :threadId :buttons :activePopup :color :onTap :popups :else :content :new :comments :time :active-user :type :template :popupShower :className :title :waitTime :style :lastClickNotInPopup :reqUrl :id :padding :requestQueue :more :target :intervalId :tripwire :backgroundColor :oauthReq :handler :a :users :activeThreads :text :requestFun :reddit}}, :doc nil}