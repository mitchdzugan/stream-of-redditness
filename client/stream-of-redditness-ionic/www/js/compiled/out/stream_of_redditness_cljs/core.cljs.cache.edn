;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name stream-of-redditness-cljs.core, :imports nil, :requires {string clojure.string, clojure.string clojure.string, ajax.core ajax.core, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses {POST ajax.core, GET ajax.core}, :defs {t29568 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29568, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 235, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t29559 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29559, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 230, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, playFun {:protocol-inline nil, :meta {:arglists (quote ([d1 d2])), :end-column 14, :end-line 59, :column 7, :line 59, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/playFun, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 14, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2])), :test true}, readStorage {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 112, :column 7, :line 112, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, zipWriteStorage {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 22, :end-line 122, :column 7, :line 122, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipWriteStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, onAuthNewClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 21, :end-line 178, :column 7, :line 178, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthNewClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, authButtonView {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 30, :end-line 225, :column 16, :line 225, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/authButtonView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t29565 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta29566])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29565, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta29566]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 230, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta29566])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t1 {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 9, :end-line 74, :column 7, :line 74, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/t1, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 9, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, newCommentsPoller {:protocol-inline nil, :meta {:arglists (quote ([threadId])), :end-column 24, :end-line 408, :column 7, :line 408, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/newCommentsPoller, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([threadId]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 408, :end-line 408, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threadId])), :test true}, processCommentTree {:protocol-inline nil, :meta {:arglists (quote ([pathTo commentTree])), :end-column 25, :end-line 337, :column 7, :line 337, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/processCommentTree, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([pathTo commentTree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pathTo commentTree])), :test true}, storageString {:meta {:end-column 19, :end-line 111, :column 6, :line 111, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 111, :column 1, :end-line 111, :end-column 19, :test true, :name stream-of-redditness-cljs.core/storageString}, t29606 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29606, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 7, :line 454, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderThreads {:protocol-inline nil, :meta {:arglists (quote ([threads])), :end-column 20, :end-line 257, :column 7, :line 257, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderThreads, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([threads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threads])), :test true}, moreCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadIds response])), :end-column 30, :end-line 286, :column 7, :line 286, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/moreCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([threadIds response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadIds response])), :test true}, ->t29562 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta29563])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29562, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta29563]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 235, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta29563])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, allPoss {:meta {:end-column 13, :end-line 16, :column 6, :line 16, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :test true, :name stream-of-redditness-cljs.core/allPoss}, binary {:meta {:end-column 12, :end-line 15, :column 6, :line 15, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :test true, :name stream-of-redditness-cljs.core/binary}, deep-merge-root {:protocol-inline nil, :meta {:arglists (quote ([f a b])), :end-column 22, :end-line 45, :column 7, :line 45, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge-root, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([f a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f a b])), :test true}, pollReddit {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 390, :column 7, :line 390, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/pollReddit, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, writeStorage {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 19, :end-line 117, :column 7, :line 117, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, streamView {:protocol-inline nil, :meta {:arglists (quote ([threadsString])), :export true, :end-column 26, :end-line 417, :column 16, :line 417, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/streamView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 26, :method-params ([threadsString]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threadsString])), :test true}, localStorage {:meta {:end-column 18, :end-line 110, :column 6, :line 110, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 110, :column 1, :end-line 110, :end-column 18, :test true, :name stream-of-redditness-cljs.core/localStorage}, t29617 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29617, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 7, :line 454, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, printReturn {:protocol-inline nil, :meta {:arglists (quote ([a])), :end-column 18, :end-line 11, :column 7, :line 11, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/printReturn, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :test true}, deep-merge {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b f]), :arglists ([a b] [a b f]), :arglists-meta (nil nil)}, :arglists (quote ([a b] [a b f])), :end-column 17, :end-line 55, :column 7, :line 55, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b f]), :arglists ([a b] [a b f]), :arglists-meta (nil nil)}, :method-params ([a b] [a b f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists ([a b] [a b f]), :test true}, renderBaseComment {:protocol-inline nil, :meta {:arglists (quote ([baseComment])), :end-column 24, :end-line 240, :column 7, :line 240, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderBaseComment, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([baseComment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 1, :fn-var true, :arglists (quote ([baseComment])), :test true}, makeNextRequest {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 461, :column 7, :line 461, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/makeNextRequest, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, socket {:meta {:end-column 12, :end-line 145, :column 6, :line 145, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 145, :column 1, :end-line 145, :end-column 12, :test true, :name stream-of-redditness-cljs.core/socket}, onAuthSwitchClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 24, :end-line 203, :column 7, :line 203, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthSwitchClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, parseObjForce {:protocol-inline nil, :meta {:arglists (quote ([jsonString])), :end-column 20, :end-line 102, :column 7, :line 102, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/parseObjForce, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([jsonString]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([jsonString])), :test true}, showPopup {:protocol-inline nil, :meta {:arglists (quote ([popupDetails])), :export true, :end-column 25, :end-line 136, :column 16, :line 136, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/showPopup, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([popupDetails]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupDetails])), :test true}, t29565 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29565, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 230, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, partition2 {:protocol-inline nil, :meta {:arglists (quote ([f l])), :end-column 17, :end-line 25, :column 7, :line 25, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/partition2, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([f l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f l])), :test true}, writeState {:protocol-inline nil, :meta {:arglists (quote ([f hashmap])), :end-column 17, :end-line 81, :column 7, :line 81, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([f hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f hashmap])), :test true}, zipReadState {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 19, :end-line 78, :column 7, :line 78, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipReadState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, t29562 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t29562, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 11, :line 235, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, zipWriteState {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([zip hashmap] [zip hashmap k]), :arglists ([zip hashmap] [zip hashmap k]), :arglists-meta (nil nil)}, :arglists (quote ([zip hashmap] [zip hashmap k])), :end-column 20, :end-line 83, :column 7, :line 83, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipWriteState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([zip hashmap] [zip hashmap k]), :arglists ([zip hashmap] [zip hashmap k]), :arglists-meta (nil nil)}, :method-params ([zip hashmap] [zip hashmap k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 3, :fn-var true, :arglists ([zip hashmap] [zip hashmap k]), :test true}, myFun {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 414, :column 7, :line 414, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/myFun, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, zipOverwriteState {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 24, :end-line 88, :column 7, :line 88, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipOverwriteState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, ->t29568 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta29569])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29568, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta29569]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 235, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta29569])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, merge-vectors {:protocol-inline nil, :meta {:arglists (quote ([k x y])), :end-column 20, :end-line 52, :column 7, :line 52, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/merge-vectors, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([k x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([k x y])), :test true}, zipReadStorage {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 21, :end-line 115, :column 7, :line 115, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/zipReadStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, app-state {:meta {:end-column 19, :end-line 29, :column 10, :line 29, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 29, :column 1, :end-line 29, :end-column 19, :test true, :name stream-of-redditness-cljs.core/app-state}, pf2 {:protocol-inline nil, :meta {:arglists (quote ([d1 d2])), :end-column 10, :end-line 70, :column 7, :line 70, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/pf2, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 10, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2])), :test true}, ->t29617 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner activeThreads threadsString streamView meta29618])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29617, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([owner activeThreads threadsString streamView meta29618]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 454, :max-fixed-arity 5, :fn-var true, :arglists (quote ([owner activeThreads threadsString streamView meta29618])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, switchActiveUser {:protocol-inline nil, :meta {:arglists (quote ([username])), :end-column 23, :end-line 199, :column 7, :line 199, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/switchActiveUser, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 23, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username])), :test true}, registerPopupShower {:protocol-inline nil, :meta {:arglists (quote ([popupShower])), :export true, :end-column 35, :end-line 133, :column 16, :line 133, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/registerPopupShower, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 35, :method-params ([popupShower]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([popupShower])), :test true}, ->t29559 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta29560])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29559, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButtonView meta29560]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 230, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta29560])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, on-js-reload {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 482, :column 7, :line 482, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/on-js-reload, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, newCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadId response])), :end-column 29, :end-line 379, :column 7, :line 379, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/newCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 29, :method-params ([threadId response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadId response])), :test true}, refreshView {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 98, :column 7, :line 98, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/refreshView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t29606 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner activeThreads threadsString streamView meta29607])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t29606, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([owner activeThreads threadsString streamView meta29607]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 454, :max-fixed-arity 5, :fn-var true, :arglists (quote ([owner activeThreads threadsString streamView meta29607])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, renderBaseComment1 {:protocol-inline nil, :meta {:arglists (quote ([baseComment])), :end-column 25, :end-line 248, :column 7, :line 248, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/renderBaseComment1, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 25, :method-params ([baseComment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([baseComment])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:tripwire :oauthReq :popups :reddit :opentokSessions :awaitingReqUrl :reqUrl :intervalId :requestSent :popupShower :activePopup :lastClickNotInPopup :activeThreads :requestQueue :else :a :b :c :d :e :g :users :active-user :session :myId :threadId :template :title :buttons :text :onTap :target :content :time :comments :className :style :padding :backgroundColor :color :marginLeft :id :requestFun :type :handler :more :data :waitTime :new], :seen #{:requestSent :marginLeft :awaitingReqUrl :myId :threadId :buttons :activePopup :color :onTap :popups :else :content :opentokSessions :new :comments :time :active-user :type :template :popupShower :e :className :title :waitTime :style :g :c :lastClickNotInPopup :reqUrl :id :padding :b :requestQueue :d :more :target :intervalId :tripwire :backgroundColor :oauthReq :handler :a :users :activeThreads :session :text :requestFun :data :reddit}}, :doc nil}