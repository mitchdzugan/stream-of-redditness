;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name stream-of-redditness-cljs.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :defs {t25593 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t25593, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 13, :line 95, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, writeLocalStorage {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 24, :end-line 47, :column 7, :line 47, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeLocalStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 24, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, readLocalStorageWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 33, :end-line 45, :column 7, :line 45, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readLocalStorageWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 33, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, onAuthNewClick {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 21, :end-line 69, :column 7, :line 69, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/onAuthNewClick, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, t25596 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t25596, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 13, :line 101, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, storageString {:meta {:end-column 19, :end-line 41, :column 6, :line 41, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 41, :column 1, :end-line 41, :end-column 19, :test true, :name stream-of-redditness-cljs.core/storageString}, t25599 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t25599, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 13, :line 95, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t25602 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta25603])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t25602, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta25603]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 13, :factory :positional, :line 101, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta25603])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, readAppStateWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip])), :end-column 29, :end-line 21, :column 7, :line 21, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readAppStateWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 29, :method-params ([zip]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zip])), :test true}, localStorage {:meta {:end-column 18, :end-line 40, :column 6, :line 40, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 40, :column 1, :end-line 40, :end-column 18, :test true, :name stream-of-redditness-cljs.core/localStorage}, writeAppStateWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 30, :end-line 26, :column 7, :line 26, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeAppStateWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 30, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, deep-merge {:protocol-inline nil, :meta {:arglists (quote ([a b])), :end-column 17, :end-line 17, :column 7, :line 17, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/deep-merge, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 17, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :test true}, socket {:meta {:end-column 12, :end-line 55, :column 6, :line 55, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 55, :column 1, :end-line 55, :end-column 12, :test true, :name stream-of-redditness-cljs.core/socket}, parseObjForce {:protocol-inline nil, :meta {:arglists (quote ([jsonString])), :end-column 20, :end-line 32, :column 7, :line 32, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/parseObjForce, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([jsonString]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([jsonString])), :test true}, authButton {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 26, :end-line 90, :column 16, :line 90, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/authButton, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t25602 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/t25602, :file "src/stream_of_redditness_cljs/core.cljs", :type true, :anonymous true, :column 13, :line 101, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t25596 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta25597])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t25596, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta25597]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 13, :factory :positional, :line 101, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta25597])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t25599 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta25600])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t25599, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta25600]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 13, :factory :positional, :line 95, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta25600])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, writeAppState {:protocol-inline nil, :meta {:arglists (quote ([hashmap])), :end-column 20, :end-line 24, :column 7, :line 24, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeAppState, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 20, :method-params ([hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hashmap])), :test true}, readLocalStorage {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 42, :column 7, :line 42, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/readLocalStorage, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, writeLocalStorageWithZipper {:protocol-inline nil, :meta {:arglists (quote ([zip hashmap])), :end-column 34, :end-line 52, :column 7, :line 52, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/writeLocalStorageWithZipper, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 34, :method-params ([zip hashmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zip hashmap])), :test true}, app-state {:meta {:end-column 19, :end-line 9, :column 10, :line 9, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :file "src/stream_of_redditness_cljs/core.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :test true, :name stream-of-redditness-cljs.core/app-state}, ->t25593 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButton meta25594])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.core/->t25593, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :method-params ([storedAuths owner data authButton meta25594]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 13, :factory :positional, :line 95, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButton meta25594])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, on-js-reload {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 108, :column 7, :line 108, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/on-js-reload, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, refreshView {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 28, :column 7, :line 28, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/core.cljs"}, :name stream-of-redditness-cljs.core/refreshView, :variadic false, :file "src/stream_of_redditness_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :cljs.analyzer/constants {:order [:tripwire :oauthReq :awaitingReqUrl :reqUrl :intervalId :requestSent :else :users :active-user :target], :seen #{:requestSent :awaitingReqUrl :else :active-user :reqUrl :target :intervalId :tripwire :oauthReq :users}}, :doc nil}