;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name stream-of-redditness-cljs.views, :imports nil, :requires {dom om.dom, globals stream-of-redditness-cljs.globals, stream-of-redditness-cljs.util stream-of-redditness-cljs.util, om.dom om.dom, stream-of-redditness-cljs.auth stream-of-redditness-cljs.auth, util stream-of-redditness-cljs.util, auth stream-of-redditness-cljs.auth, string clojure.string, om.core om.core, om om.core, stream-of-redditness-cljs.globals stream-of-redditness-cljs.globals, clojure.string clojure.string}, :uses nil, :defs {t35410 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35410, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 7, :line 111, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t35397 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35397, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 11, :line 22, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, authButtonView {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 30, :end-line 13, :column 16, :line 13, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/authButtonView, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t35400 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35400, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 11, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t35417 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner active-threads stream-view meta35418])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35417, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([owner active-threads stream-view meta35418]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 111, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner active-threads stream-view meta35418])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t35394 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35394, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 11, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-in! {:meta {:end-column 13, :end-line 11, :column 6, :line 11, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :file "src/stream_of_redditness_cljs/views.cljs", :line 11, :column 1, :end-line 11, :end-column 13, :test true, :name stream-of-redditness-cljs.views/get-in!}, t35403 {:num-fields 5, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35403, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 11, :line 22, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-threads {:protocol-inline nil, :meta {:arglists (quote ([threads])), :end-column 21, :end-line 90, :column 7, :line 90, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/render-threads, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 21, :method-params ([threads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([threads])), :test true}, onMouse {:protocol-inline nil, :meta {:arglists (quote ([id])), :end-column 14, :end-line 27, :column 7, :line 27, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/onMouse, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 14, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :test true}, deep-merge-in! {:meta {:end-column 20, :end-line 9, :column 6, :line 9, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :file "src/stream_of_redditness_cljs/views.cljs", :line 9, :column 1, :end-line 9, :end-column 20, :test true, :name stream-of-redditness-cljs.views/deep-merge-in!}, ->t35397 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta35398])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35397, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([storedAuths owner data authButtonView meta35398]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 22, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta35398])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, stream-view {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 108, :column 7, :line 108, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/stream-view, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, write-in! {:meta {:end-column 15, :end-line 10, :column 6, :line 10, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :file "src/stream_of_redditness_cljs/views.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :test true, :name stream-of-redditness-cljs.views/write-in!}, myPost {:protocol-inline nil, :meta {:arglists (quote ([uri params])), :end-column 13, :end-line 32, :column 7, :line 32, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/myPost, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 13, :method-params ([uri params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([uri params])), :test true}, ->t35400 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta35401])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35400, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([storedAuths owner data authButtonView meta35401]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta35401])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t35410 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner active-threads stream-view meta35411])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35410, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([owner active-threads stream-view meta35411]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 111, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner active-threads stream-view meta35411])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, render-base-comment {:protocol-inline nil, :meta {:arglists (quote ([base-comment])), :end-column 26, :end-line 83, :column 7, :line 83, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/render-base-comment, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 26, :method-params ([base-comment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([base-comment])), :test true}, ->t35403 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta35404])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35403, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([storedAuths owner data authButtonView meta35404]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 22, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta35404])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t35394 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([storedAuths owner data authButtonView meta35395])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/->t35394, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :method-params ([storedAuths owner data authButtonView meta35395]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 11, :factory :positional, :line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([storedAuths owner data authButtonView meta35395])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, render-comment {:protocol-inline nil, :meta {:arglists (quote ([color cpath base-comment])), :end-column 21, :end-line 38, :column 7, :line 38, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/views.cljs"}, :name stream-of-redditness-cljs.views/render-comment, :variadic false, :file "src/stream_of_redditness_cljs/views.cljs", :end-column 21, :method-params ([color cpath base-comment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([color cpath base-comment])), :test true}, t35417 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name stream-of-redditness-cljs.views/t35417, :file "src/stream_of_redditness_cljs/views.cljs", :type true, :anonymous true, :column 7, :line 111, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :cljs.analyzer/constants {:order [:target :comment :uri :params :headers :authorization :className :onClick :style :color :backgroundColor :marginRight :padding :id :marginBottom :author :score :time :body :comments :paddingLeft :threadOwnerId :thread-owner-id :title :subreddit :receivedData :threads], :seen #{:color :threadOwnerId :receivedData :authorization :comments :time :params :paddingLeft :className :title :headers :style :author :threads :id :score :padding :comment :marginBottom :uri :target :body :backgroundColor :onClick :subreddit :thread-owner-id :marginRight}}, :doc nil}