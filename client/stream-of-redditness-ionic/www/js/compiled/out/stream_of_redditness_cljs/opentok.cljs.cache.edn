;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name stream-of-redditness-cljs.opentok, :imports nil, :requires {set clojure.set, clojure.set clojure.set, active-threads stream-of-redditness-cljs.active-threads, stream-of-redditness-cljs.active-threads stream-of-redditness-cljs.active-threads, util stream-of-redditness-cljs.util, stream-of-redditness-cljs.util stream-of-redditness-cljs.util, stream-of-redditness-cljs.globals stream-of-redditness-cljs.globals, globals stream-of-redditness-cljs.globals}, :uses nil, :defs {ensure-someone-is-introduced {:protocol-inline nil, :meta {:arglists (quote ([session thread-id])), :end-column 35, :end-line 60, :column 7, :line 60, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/ensure-someone-is-introduced, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 35, :method-params ([session thread-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([session thread-id])), :test true}, get-in! {:meta {:end-column 13, :end-line 10, :column 6, :line 10, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :file "src/stream_of_redditness_cljs/opentok.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :test true, :name stream-of-redditness-cljs.opentok/get-in!}, remove-from! {:protocol-inline nil, :meta {:arglists (quote ([z v])), :end-column 19, :end-line 12, :column 7, :line 12, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/remove-from!, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 19, :method-params ([z v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([z v])), :test true}, string-to-num {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 20, :end-line 26, :column 7, :line 26, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/string-to-num, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, add-to! {:protocol-inline nil, :meta {:arglists (quote ([z v])), :end-column 14, :end-line 18, :column 7, :line 18, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/add-to!, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 14, :method-params ([z v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([z v])), :test true}, deep-merge-in! {:meta {:end-column 20, :end-line 7, :column 6, :line 7, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :file "src/stream_of_redditness_cljs/opentok.cljs", :line 7, :column 1, :end-line 7, :end-column 20, :test true, :name stream-of-redditness-cljs.opentok/deep-merge-in!}, set-opentok-callbacks {:protocol-inline nil, :meta {:arglists (quote ([thread-id session])), :end-column 28, :end-line 69, :column 7, :line 69, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/set-opentok-callbacks, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 28, :method-params ([thread-id session]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([thread-id session])), :test true}, write-in! {:meta {:end-column 15, :end-line 9, :column 6, :line 9, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :file "src/stream_of_redditness_cljs/opentok.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name stream-of-redditness-cljs.opentok/write-in!}, is-in!? {:protocol-inline nil, :meta {:arglists (quote ([z v])), :end-column 14, :end-line 24, :column 7, :line 24, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/is-in!?, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 14, :method-params ([z v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([z v])), :test true}, introduce {:protocol-inline nil, :meta {:arglists (quote ([session thread-id client client-id iinf])), :end-column 16, :end-line 28, :column 7, :line 28, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/introduce, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 16, :method-params ([session thread-id client client-id iinf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 5, :fn-var true, :arglists (quote ([session thread-id client client-id iinf])), :test true}, introduce-if-necessary {:protocol-inline nil, :meta {:arglists (quote ([session thread-id])), :end-column 29, :end-line 44, :column 7, :line 44, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/opentok.cljs"}, :name stream-of-redditness-cljs.opentok/introduce-if-necessary, :variadic false, :file "src/stream_of_redditness_cljs/opentok.cljs", :end-column 29, :method-params ([session thread-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([session thread-id])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:unintroduced-clients :should-be-introduced-clients :threads :my-id :clients :session], :seen #{:my-id :unintroduced-clients :clients :should-be-introduced-clients :threads :session}}, :doc nil}