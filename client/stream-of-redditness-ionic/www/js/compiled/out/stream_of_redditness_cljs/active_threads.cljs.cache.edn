;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name stream-of-redditness-cljs.active-threads, :imports nil, :requires {set clojure.set, clojure.set clojure.set, string clojure.string, clojure.string clojure.string, ajax.core ajax.core, util stream-of-redditness-cljs.util, stream-of-redditness-cljs.util stream-of-redditness-cljs.util, stream-of-redditness-cljs.globals stream-of-redditness-cljs.globals, globals stream-of-redditness-cljs.globals}, :uses {POST ajax.core, GET ajax.core}, :defs {write-and-send-active-thread {:protocol-inline nil, :meta {:arglists (quote ([thread-id contents])), :end-column 35, :end-line 24, :column 7, :line 24, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/write-and-send-active-thread, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 35, :method-params ([thread-id contents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([thread-id contents])), :test true}, write-active-thread {:protocol-inline nil, :meta {:arglists (quote ([thread-id contents])), :end-column 26, :end-line 12, :column 7, :line 12, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/write-active-thread, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 26, :method-params ([thread-id contents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([thread-id contents])), :test true}, processCommentTree {:protocol-inline nil, :meta {:arglists (quote ([pathTo commentTree])), :end-column 25, :end-line 110, :column 7, :line 110, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/processCommentTree, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 25, :method-params ([pathTo commentTree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pathTo commentTree])), :test true}, send-large-data {:protocol-inline nil, :meta {:arglists (quote ([thread-id type contents])), :end-column 22, :end-line 17, :column 7, :line 17, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/send-large-data, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 22, :method-params ([thread-id type contents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([thread-id type contents])), :test true}, set-active-threads {:protocol-inline nil, :meta {:arglists (quote ([thread-ids colors])), :end-column 25, :end-line 176, :column 7, :line 176, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/set-active-threads, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 25, :method-params ([thread-ids colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([thread-ids colors])), :test true}, moreCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadIds response])), :end-column 30, :end-line 44, :column 7, :line 44, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/moreCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 30, :method-params ([threadIds response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadIds response])), :test true}, get-in! {:meta {:end-column 13, :end-line 10, :column 6, :line 10, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :file "src/stream_of_redditness_cljs/active-threads.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :test true, :name stream-of-redditness-cljs.active-threads/get-in!}, deep-merge-in! {:meta {:end-column 20, :end-line 8, :column 6, :line 8, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :file "src/stream_of_redditness_cljs/active-threads.cljs", :line 8, :column 1, :end-line 8, :end-column 20, :test true, :name stream-of-redditness-cljs.active-threads/deep-merge-in!}, redditCommentData {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 24, :end-line 29, :column 7, :line 29, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/redditCommentData, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 24, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, makeNextRequest {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 214, :column 7, :line 214, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/makeNextRequest, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, write-in! {:meta {:end-column 15, :end-line 9, :column 6, :line 9, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :file "src/stream_of_redditness_cljs/active-threads.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name stream-of-redditness-cljs.active-threads/write-in!}, partition2 {:protocol-inline nil, :meta {:arglists (quote ([f l])), :end-column 17, :end-line 41, :column 7, :line 41, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/partition2, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 17, :method-params ([f l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f l])), :test true}, new-comments-poller {:protocol-inline nil, :meta {:arglists (quote ([thread-id])), :end-column 26, :end-line 169, :column 7, :line 169, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/new-comments-poller, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 26, :method-params ([thread-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thread-id])), :test true}, newCommentsJSONHandler {:protocol-inline nil, :meta {:arglists (quote ([threadId response])), :end-column 29, :end-line 152, :column 7, :line 152, :file "/Users/mitch/Projects/stream-of-redditness/client/src/stream_of_redditness_cljs/active-threads.cljs"}, :name stream-of-redditness-cljs.active-threads/newCommentsJSONHandler, :variadic false, :file "src/stream_of_redditness_cljs/active-threads.cljs", :end-column 29, :method-params ([threadId response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threadId response])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:threads :sesssion :flair-css :time :likes :author :flair-text :id :score :saved :gilded :body :thread-id :request-fun :type :handler :more :comments :receivedData :subreddit :title :new :color], :seen #{:sesssion :color :flair-css :receivedData :new :comments :time :type :likes :title :author :threads :flair-text :id :score :saved :gilded :more :thread-id :body :handler :subreddit :request-fun}}, :doc nil}