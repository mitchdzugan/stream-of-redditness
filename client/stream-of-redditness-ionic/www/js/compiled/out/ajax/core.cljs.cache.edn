;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name ajax.core, :imports nil, :requires {uri goog.Uri, t cognitect.transit, xhr goog.net.XhrIo, goog.net.XhrManager goog.net.XhrManager, goog.net.XhrIo goog.net.XhrIo, goog.json goog.json, goog.Uri.QueryData goog.Uri.QueryData, goog.Uri goog.Uri, query-data goog.Uri.QueryData, cognitect.transit cognitect.transit, goog.net.EventType goog.net.EventType, events goog.events, goog.structs goog.structs, goog-json goog.json, structs goog.structs, goog.json.Serializer goog.json.Serializer, xhrm goog.net.XhrManager, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, goog.events goog.events, reader cljs.reader, goog.net.ErrorCode goog.net.ErrorCode}, :uses nil, :defs {edn-request-format {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 25, :end-line 135, :column 7, :line 135, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/edn-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, -status {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Returns the HTTP Status of the response as an integer.", :protocol ajax.core/AjaxResponse, :end-column 11, :end-line 35, :column 4, :line 35, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxResponse, :name ajax.core/-status, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Returns the HTTP Status of the response as an integer.", :test true}, PUT {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 16, :end-line 450, :column 13, :line 450, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/PUT, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 450, :end-line 450, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, detect-content-type {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([content-type opts format-entry] [content-type opts] [content-type]), :arglists ([content-type opts format-entry] [content-type opts] [content-type]), :arglists-meta (nil nil nil)}, :arglists (quote ([content-type opts format-entry] [content-type opts] [content-type])), :end-column 36, :end-line 237, :column 17, :line 237, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/detect-content-type, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 36, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([content-type opts format-entry] [content-type opts] [content-type]), :arglists ([content-type opts format-entry] [content-type opts] [content-type]), :arglists-meta (nil nil nil)}, :method-params ([content-type opts format-entry] [content-type opts] [content-type]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 3, :fn-var true, :arglists ([content-type opts format-entry] [content-type opts] [content-type]), :test true}, POST {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 17, :end-line 449, :column 13, :line 449, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/POST, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, keyword-response-format-2 {:protocol-inline nil, :meta {:arglists (quote ([format format-params])), :end-column 32, :end-line 394, :column 7, :line 394, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/keyword-response-format-2, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 32, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params])), :test true}, AjaxImpl {:meta {:protocol-info {:methods {-js-ajax-request [[this uri method body headers handler opts]]}}, :protocol-symbol true, :doc "An abstraction for a javascript class that implements\n   Ajax calls.", :end-column 22, :end-line 18, :column 14, :line 18, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol-symbol true, :name ajax.core/AjaxImpl, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 22, :column 1, :line 18, :protocol-info {:methods {-js-ajax-request [[this uri method body headers handler opts]]}}, :info nil, :end-line 18, :impls #{js/XMLHttpRequest goog/net.XhrManager goog/net.XhrIo}, :doc "An abstraction for a javascript class that implements\n   Ajax calls.", :test true}, accept-header {:protocol-inline nil, :meta {:arglists (quote ([{:keys [response-format], :as opts}])), :end-column 20, :end-line 255, :column 7, :line 255, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/accept-header, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 20, :method-params ([p__23837]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [response-format], :as opts}])), :test true}, transit-request-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [type writer], :as opts}]), :arglists ([] [{:keys [type writer], :as opts}]), :arglists-meta (nil nil)}, :arglists (quote ([] [{:keys [type writer], :as opts}])), :end-column 29, :end-line 145, :column 7, :line 145, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transit-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [type writer], :as opts}]), :arglists ([] [{:keys [type writer], :as opts}]), :arglists-meta (nil nil)}, :method-params ([] [{:keys [type writer], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists ([] [{:keys [type writer], :as opts}]), :test true}, transit-read {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader raw xhrio] [reader raw] [reader]), :arglists ([reader raw xhrio] [reader raw] [reader]), :arglists-meta (nil nil nil)}, :arglists (quote ([reader raw xhrio] [reader raw] [reader])), :end-column 29, :end-line 152, :column 17, :line 152, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transit-read, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader raw xhrio] [reader raw] [reader]), :arglists ([reader raw xhrio] [reader raw] [reader]), :arglists-meta (nil nil nil)}, :method-params ([reader raw xhrio] [reader raw] [reader]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 3, :fn-var true, :arglists ([reader raw xhrio] [reader raw] [reader]), :test true}, json-request-format {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 26, :end-line 184, :column 7, :line 184, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/json-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, success? {:protocol-inline nil, :meta {:arglists (quote ([status])), :end-column 15, :end-line 121, :column 7, :line 121, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/success?, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 15, :method-params ([status]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([status])), :test true}, raw-response-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([] [opts])), :end-column 26, :end-line 177, :column 7, :line 177, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/raw-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :test true}, get-request-format {:protocol-inline nil, :meta {:arglists (quote ([format])), :end-column 25, :end-line 331, :column 7, :line 331, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/get-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([format]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([format])), :test true}, process-inputs {:protocol-inline nil, :meta {:arglists (quote ([{:keys [uri method format params headers]} {:keys [content-type]}])), :end-column 21, :end-line 342, :column 7, :line 342, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/process-inputs, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 21, :method-params ([p__23860 p__23861]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [uri method format params headers]} {:keys [content-type]}])), :test true}, get-default-format {:protocol-inline nil, :meta {:arglists (quote ([xhrio {:keys [response-format], :as opts}])), :end-column 25, :end-line 242, :column 7, :line 242, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/get-default-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([xhrio p__23831]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xhrio {:keys [response-format], :as opts}])), :test true}, -abort {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Aborts a running ajax request, if possible.", :protocol ajax.core/AjaxRequest, :end-column 10, :end-line 27, :column 4, :line 27, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxRequest, :name ajax.core/-abort, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Aborts a running ajax request, if possible.", :test true}, detect-response-format-read {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts xhrio] [opts]), :arglists ([opts xhrio] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([opts xhrio] [opts])), :end-column 44, :end-line 251, :column 17, :line 251, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/detect-response-format-read, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 44, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts xhrio] [opts]), :arglists ([opts xhrio] [opts]), :arglists-meta (nil nil)}, :method-params ([opts xhrio] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists ([opts xhrio] [opts]), :test true}, default-formats {:meta {:end-column 21, :end-line 216, :column 6, :line 216, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :line 216, :column 1, :end-line 216, :end-column 21, :test true, :name ajax.core/default-formats}, ready-state {:protocol-inline nil, :meta {:arglists (quote ([e])), :end-column 18, :end-line 77, :column 7, :line 77, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/ready-state, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :test true}, interpret-response {:protocol-inline nil, :meta {:arglists (quote ([{:keys [read], :as format} xhrio])), :end-column 25, :end-line 304, :column 7, :line 304, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/interpret-response, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([p__23853 xhrio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [read], :as format} xhrio])), :test true}, -status-text {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Returns the HTTP Status Text of the response as a string.", :protocol ajax.core/AjaxResponse, :end-column 16, :end-line 37, :column 4, :line 37, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxResponse, :name ajax.core/-status-text, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Returns the HTTP Status Text of the response as a string.", :test true}, get-response-format {:protocol-inline nil, :meta {:arglists (quote ([{:keys [response-format], :as opts}])), :end-column 26, :end-line 270, :column 7, :line 270, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/get-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :method-params ([p__23843]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [response-format], :as opts}])), :test true}, easy-ajax-request {:protocol-inline nil, :meta {:arglists (quote ([uri method opts])), :end-column 24, :end-line 440, :column 7, :line 440, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/easy-ajax-request, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 24, :method-params ([uri method opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method opts])), :test true}, -get-response-header {:protocol-inline nil, :meta {:arglists (quote ([this header])), :doc "Gets the specified response header (specified by a string) as a string.", :protocol ajax.core/AjaxResponse, :end-column 24, :end-line 41, :column 4, :line 41, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxResponse, :name ajax.core/-get-response-header, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 24, :method-params ([this header]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this header])), :doc "Gets the specified response header (specified by a string) as a string.", :test true}, AjaxResponse {:meta {:protocol-info {:methods {-status [[this]], -status-text [[this]], -body [[this]], -get-response-header [[this header]], -was-aborted [[this]]}}, :protocol-symbol true, :doc "An abstraction for an ajax response.", :end-column 26, :end-line 33, :column 14, :line 33, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol-symbol true, :name ajax.core/AjaxResponse, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :column 1, :line 33, :protocol-info {:methods {-status [[this]], -status-text [[this]], -body [[this]], -get-response-header [[this header]], -was-aborted [[this]]}}, :info nil, :end-line 33, :impls #{js/XMLHttpRequest goog/net.XhrIo}, :doc "An abstraction for an ajax response.", :test true}, exception-response {:protocol-inline nil, :meta {:arglists (quote ([e status {:keys [description]} xhrio])), :end-column 25, :end-line 279, :column 7, :line 279, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/exception-response, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([e status p__23846 xhrio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 4, :fn-var true, :arglists (quote ([e status {:keys [description]} xhrio])), :test true}, submittable? {:protocol-inline nil, :meta {:arglists (quote ([params])), :end-column 19, :end-line 49, :column 7, :line 49, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/submittable?, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 19, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params])), :test true}, uri-with-params {:protocol-inline nil, :meta {:arglists (quote ([uri params])), :end-column 22, :end-line 326, :column 7, :line 326, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/uri-with-params, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 22, :method-params ([uri params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 2, :fn-var true, :arglists (quote ([uri params])), :test true}, transform-handler {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :arglists ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :arglists-meta (nil nil)}, :arglists (quote ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}])), :end-column 34, :end-line 417, :column 17, :line 417, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transform-handler, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :arglists ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :arglists-meta (nil nil)}, :method-params ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 2, :fn-var true, :arglists ([{:keys [handler error-handler finally]} [ok result]] [{:keys [handler error-handler finally]}]), :test true}, no-format {:protocol-inline nil, :meta {:arglists (quote ([xhrio])), :end-column 16, :end-line 323, :column 7, :line 323, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/no-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 16, :method-params ([xhrio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xhrio])), :test true}, transform-opts {:protocol-inline nil, :meta {:arglists (quote ([{:keys [method format response-format params], :as opts}])), :end-column 21, :end-line 424, :column 7, :line 424, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transform-opts, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 21, :method-params ([p__23901]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [method format response-format params], :as opts}])), :test true}, AjaxRequest {:meta {:protocol-info {:methods {-abort [[this]]}}, :protocol-symbol true, :doc "An abstraction for a running ajax request.", :end-column 25, :end-line 25, :column 14, :line 25, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol-symbol true, :name ajax.core/AjaxRequest, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :column 1, :line 25, :protocol-info {:methods {-abort [[this]]}}, :info nil, :end-line 25, :impls #{js/XMLHttpRequest goog/net.XhrIo}, :doc "An abstraction for a running ajax request.", :test true}, js-handler {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([response-format handler xhrio] [response-format handler] [response-format]), :arglists ([response-format handler xhrio] [response-format handler] [response-format]), :arglists-meta (nil nil nil)}, :arglists (quote ([response-format handler xhrio] [response-format handler] [response-format])), :end-column 27, :end-line 359, :column 17, :line 359, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/js-handler, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([response-format handler xhrio] [response-format handler] [response-format]), :arglists ([response-format handler xhrio] [response-format handler] [response-format]), :arglists-meta (nil nil nil)}, :method-params ([response-format handler xhrio] [response-format handler] [response-format]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 3, :fn-var true, :arglists ([response-format handler xhrio] [response-format handler] [response-format]), :test true}, DELETE {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 19, :end-line 451, :column 13, :line 451, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/DELETE, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, params-to-str {:protocol-inline nil, :meta {:arglists (quote ([params])), :end-column 20, :end-line 165, :column 7, :line 165, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/params-to-str, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 20, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params])), :test true}, transit-content-type {:meta {:end-column 26, :end-line 139, :column 6, :line 139, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :line 139, :column 1, :end-line 139, :end-column 26, :test true, :name ajax.core/transit-content-type}, -was-aborted {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Was the response aborted.", :protocol ajax.core/AjaxResponse, :end-column 16, :end-line 43, :column 4, :line 43, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxResponse, :name ajax.core/-was-aborted, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Was the response aborted.", :test true}, json-response-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [prefix keywords? raw]}]), :arglists ([] [{:keys [prefix keywords? raw]}]), :arglists-meta (nil nil)}, :arglists (quote ([] [{:keys [prefix keywords? raw]}])), :doc "Returns a JSON response format.  Options include\n   :keywords? Returns the keys as keywords\n   :prefix A prefix that needs to be stripped off.  This is to\n   combat JSON hijacking.  If you're using JSON with GET request,\n   you should think about using this.\n   http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses\n   http://haacked.com/archive/2009/06/24/json-hijacking.aspx", :end-column 27, :end-line 198, :column 7, :line 198, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/json-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [prefix keywords? raw]}]), :arglists ([] [{:keys [prefix keywords? raw]}]), :arglists-meta (nil nil)}, :method-params ([] [{:keys [prefix keywords? raw]}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists ([] [{:keys [prefix keywords? raw]}]), :doc "Returns a JSON response format.  Options include\n   :keywords? Returns the keys as keywords\n   :prefix A prefix that needs to be stripped off.  This is to\n   combat JSON hijacking.  If you're using JSON with GET request,\n   you should think about using this.\n   http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses\n   http://haacked.com/archive/2009/06/24/json-hijacking.aspx", :test true}, transit-write {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([writer params] [writer]), :arglists ([writer params] [writer]), :arglists-meta (nil nil)}, :arglists (quote ([writer params] [writer])), :end-column 30, :end-line 141, :column 17, :line 141, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transit-write, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 30, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([writer params] [writer]), :arglists ([writer params] [writer]), :arglists-meta (nil nil)}, :method-params ([writer params] [writer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists ([writer params] [writer]), :test true}, get-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts format-entry] [opts]), :arglists ([opts format-entry] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([opts format-entry] [opts])), :end-column 27, :end-line 224, :column 17, :line 224, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/get-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts format-entry] [opts]), :arglists ([opts format-entry] [opts]), :arglists-meta (nil nil)}, :method-params ([opts format-entry] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists ([opts format-entry] [opts]), :test true}, abort {:protocol-inline nil, :meta {:arglists (quote ([this])), :end-column 12, :end-line 119, :column 7, :line 119, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/abort, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, ajax-request {:protocol-inline nil, :meta {:arglists (quote ([{:keys [method api], :as opts}])), :end-column 19, :end-line 369, :column 7, :line 369, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/ajax-request, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 19, :method-params ([p__23874]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [method api], :as opts}])), :test true}, read-edn {:protocol-inline nil, :meta {:arglists (quote ([xhrio])), :end-column 15, :end-line 126, :column 7, :line 126, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/read-edn, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 15, :method-params ([xhrio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xhrio])), :test true}, normalize-method {:protocol-inline nil, :meta {:arglists (quote ([method])), :end-column 23, :end-line 337, :column 7, :line 337, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/normalize-method, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 23, :method-params ([method]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 1, :fn-var true, :arglists (quote ([method])), :test true}, -body {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Returns the response body as a string.", :protocol ajax.core/AjaxResponse, :end-column 9, :end-line 39, :column 4, :line 39, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxResponse, :name ajax.core/-body, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Returns the response body as a string.", :test true}, url-request-format {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 25, :end-line 173, :column 7, :line 173, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/url-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, keyword-response-format {:protocol-inline nil, :meta {:arglists (quote ([format format-params])), :end-column 30, :end-line 410, :column 7, :line 410, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/keyword-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 30, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 410, :end-line 410, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params])), :test true}, write-json {:protocol-inline nil, :meta {:arglists (quote ([data])), :end-column 17, :end-line 181, :column 7, :line 181, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/write-json, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, fail {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 3, :method-params [(status status-text failure params)], :arglists [[status status-text failure & params]], :arglists-meta (nil)}, :arglists (quote ([status status-text failure & params])), :end-column 11, :end-line 296, :column 7, :line 296, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/fail, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(status status-text failure params)], :arglists [[status status-text failure & params]], :arglists-meta (nil)}, :method-params [(status status-text failure params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 3, :fn-var true, :arglists [[status status-text failure & params]], :test true}, edn-response-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([] [opts])), :end-column 26, :end-line 129, :column 7, :line 129, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/edn-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :test true}, GET {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 16, :end-line 447, :column 13, :line 447, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/GET, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, HEAD {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 17, :end-line 448, :column 13, :line 448, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/HEAD, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, accept-entry {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts format-entry] [opts]), :arglists ([opts format-entry] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([opts format-entry] [opts])), :end-column 29, :end-line 231, :column 17, :line 231, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/accept-entry, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([opts format-entry] [opts]), :arglists ([opts format-entry] [opts]), :arglists-meta (nil nil)}, :method-params ([opts format-entry] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists ([opts format-entry] [opts]), :test true}, DirectlySubmittable {:meta {:protocol-info {:methods {}}, :protocol-symbol true, :doc "A marker interface for types that can be directly sent to XhrIo.", :end-column 33, :end-line 30, :column 14, :line 30, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol-symbol true, :name ajax.core/DirectlySubmittable, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 33, :column 1, :line 30, :protocol-info {:methods {}}, :info nil, :end-line 30, :impls #{js/Blob js/Document js/ArrayBufferView js/FormData}, :doc "A marker interface for types that can be directly sent to XhrIo.", :test true}, TRACE {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 18, :end-line 453, :column 13, :line 453, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/TRACE, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}, transit-response-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [type reader raw], :as opts}]), :arglists ([] [{:keys [type reader raw], :as opts}]), :arglists-meta (nil nil)}, :arglists (quote ([] [{:keys [type reader raw], :as opts}])), :end-column 30, :end-line 157, :column 7, :line 157, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/transit-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 30, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{:keys [type reader raw], :as opts}]), :arglists ([] [{:keys [type reader raw], :as opts}]), :arglists-meta (nil nil)}, :method-params ([] [{:keys [type reader raw], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists ([] [{:keys [type reader raw], :as opts}]), :test true}, base-handler {:protocol-inline nil, :meta {:arglists (quote ([response-format {:keys [handler]}])), :end-column 19, :end-line 364, :column 7, :line 364, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/base-handler, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 19, :method-params ([response-format p__23871]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response-format {:keys [handler]}])), :test true}, detect-response-format {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :arglists (quote ([] [opts])), :end-column 29, :end-line 260, :column 7, :line 260, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/detect-response-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :test true}, json-read {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 4, :method-params ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :arglists ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :arglists-meta (nil nil nil nil)}, :arglists (quote ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix])), :end-column 26, :end-line 188, :column 17, :line 188, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/json-read, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :arglists ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :arglists-meta (nil nil nil nil)}, :method-params ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 4, :fn-var true, :arglists ([prefix raw keywords? xhrio] [prefix raw keywords?] [prefix raw] [prefix]), :test true}, keyword-request-format {:protocol-inline nil, :meta {:arglists (quote ([format format-params])), :end-column 29, :end-line 381, :column 7, :line 381, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/keyword-request-format, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 29, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params])), :test true}, -js-ajax-request {:protocol-inline nil, :meta {:arglists (quote ([this uri method body headers handler opts])), :doc "Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest.", :protocol ajax.core/AjaxImpl, :end-column 20, :end-line 21, :column 4, :line 21, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :protocol ajax.core/AjaxImpl, :name ajax.core/-js-ajax-request, :variadic false, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 20, :method-params ([this uri method body headers handler opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 21, :max-fixed-arity 7, :fn-var true, :arglists (quote ([this uri method body headers handler opts])), :doc "Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest.", :test true}, OPTIONS {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :end-column 20, :end-line 452, :column 13, :line 452, :file "/Users/mitch/Projects/stream-of-redditness/client/stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs"}, :name ajax.core/OPTIONS, :variadic true, :file "stream-of-redditness-ionic/www/js/compiled/out/ajax/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists [[uri & opts]], :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 1, :fn-var true, :arglists [[uri & opts]], :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :test true}}, :require-macros {p poppea, poppea poppea, ajax.macros ajax.macros, m ajax.macros}, :cljs.analyzer/constants {:order [:with-credentials :timeout :not-initialized :connection-established :request-received :processing-request :response-ready :max-retries :priority :id :read :description :content-type :write :writer :type :json :raw :reader :keywordize-keys :keywords? :prefix :else :response-format :format :status :failure :response :error :status-text :parse :original-text :parse-error :exception :aborted :headers :params :method :uri :handler :api :finally :error-handler], :seen #{:response :description :finally :format :api :original-text :keywords? :read :not-initialized :else :failure :method :raw :response-format :status-text :aborted :processing-request :params :type :request-received :parse-error :prefix :headers :error-handler :write :priority :status :response-ready :writer :id :reader :parse :content-type :max-retries :error :exception :uri :json :timeout :connection-established :handler :keywordize-keys :with-credentials}}, :doc nil}